@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<!--Todo: Move to site.css/ use ratchet guidelines -->
<style>

    #candidate-map-canvas{
        height:250px;
    }


</style>




<nav class="bar bar-standard">
    <h2 id="title">One 2 Many</h2>
    </nav>


<div class="bar bar-standard bar-header-secondary">

    <a class=" btn btn-primary btn-block"  id="submitButton"  href="@Url.Action("", "Contacts")">Add Friends</a>
</div>
        <div id="space" class="page-heading center">
        </div>
                <!--Google Map-->
                <div id="map-canvas" style="width: 100%; height: 100%"  data-location="1520 2nd St, Santa Monica, CA 90401" >
    <!--Insert Location in data-location, insert map zoom in data-zoom-->
</div>
                <!--Google Map Close-->
           

            <div class="bar bar-standard bar-footer"><a class="btn btn-primary btn-block" href="@Url.Action( "Crew", "MyCrew")" id="findmebutton" data-formid="#organizationForm"> Find Me!</a></div>








@section scripts{
    <script src="~/Scripts/FindMeImDrunk.map.js"></script>
<script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?sensor=false"></script>
    <script type="text/javascript">



        FindMeImDrunkStartUp = function () {
            var sinchClient = new SinchClient({
                applicationKey: '32fe5784-1b8b-4a61-b1da-78b37ee38ff4',
                capabilities: { messaging: true },
            });



            var mapDraw = function (elementId, centerLatLng, options) {

                var mapoptions = {
                    center: centerLatLng,
                    zoom: 15,
                    enableHighAccuracy: true,
                    timeout: 5000,
                    scrollwheel: true,
                    maximumAge: 0,

                };


                var thisMap = new google.maps.Map(document.getElementById(elementId),
               mapoptions);

                return thisMap;

            }


            var mapCenter = new google.maps.LatLng(34.012982, -118.495186);

            var navoptions = {
                enableHighAccuracy: true,
                timeout: 5000,
                scaleControl: false,
                zoom: 8,
                scrollwheel: true,
                panControl: false,
                zoomControl: false,
                overviewMapControl: false

            };

            mapDraw('map-canvas', mapCenter, navoptions);
        }


        //functions commented out below should be used


        getGeoFromBrowser = function () {
            if (navigator.geolocation) {
                navigator.geolocation.getCurrentPosition(browserGeoSuccess, browserGeoError);
            } else {
                alert('It seems like Geolocation, which is required for this page, is not enabled in your browser. Please use a browser which supports it.');
            }
        }


        browserGeoSuccess = function (position) {

            var lati = position.coords.latitude;
            var long = position.coords.longitude;

            geoFromBrowserObj = { lat: position.coords.latitude, lng: position.coords.longitude };
            var formData = "Lat=" + lati + "&Lng=" + long + "&Miles=50";

        };


        browserGeoError = function () {
            alert("Error");
        }






// dont think we need this function below but just incase there it is..


        geoCodeByAddressOrZip = function (addressOrZip, onSuccess, onError) {
            var geocoder;
            var geocoder = new google.maps.Geocoder();


            geocoder.geocode({ 'address': addressOrZip }, function (results, status) {
                if (status == google.maps.GeocoderStatus.OK) {
                    electa.page.geoCodeResult = results;
                    var thisResult = {};


                    thisResult.lat = results[0].geometry.location.lat();
                    thisResult.lng = results[0].geometry.location.lng();
                    thisResult.name = results[0].address_components[0].long_name;



                    onSuccess(thisResult);
                }

                else if (onError) {
                    onError('Geocode was not successful for the following reason: ' + status);

                }

            });

        }


        FindMeImDrunkStartUp();



    </script>
}

